// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReceivablesShowcase.Repository;

#nullable disable

namespace ReceivablesShowcase.Repository.Migrations
{
    [DbContext(typeof(ReceivablesContext))]
    partial class ReceivablesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ReceivablesShowcase.Domain.Receivables.Receivable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Reference")
                        .IsUnique();

                    b.ToTable("Receivables", (string)null);
                });

            modelBuilder.Entity("ReceivablesShowcase.Domain.Receivables.Receivable", b =>
                {
                    b.OwnsOne("ReceivablesShowcase.Domain.Receivables.DebtorDetails", "Debtor", b1 =>
                        {
                            b1.Property<Guid>("ReceivableId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("DebtorName");

                            b1.Property<string>("Reference")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("DebtorReference");

                            b1.Property<string>("RegistrationNumber")
                                .HasColumnType("TEXT")
                                .HasColumnName("DebtorRegistrationNumber");

                            b1.HasKey("ReceivableId");

                            b1.ToTable("Receivables");

                            b1.WithOwner()
                                .HasForeignKey("ReceivableId");

                            b1.OwnsOne("ReceivablesShowcase.Domain.Receivables.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("DebtorDetailsReceivableId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("CountryCode")
                                        .HasMaxLength(8)
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressCountryCode");

                                    b2.Property<string>("Line1")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressLine1");

                                    b2.Property<string>("Line2")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressLine2");

                                    b2.Property<string>("State")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressState");

                                    b2.Property<string>("Town")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressTown");

                                    b2.Property<string>("Zip")
                                        .HasMaxLength(32)
                                        .HasColumnType("TEXT")
                                        .HasColumnName("DebtorAddressZip");

                                    b2.HasKey("DebtorDetailsReceivableId");

                                    b2.ToTable("Receivables");

                                    b2.WithOwner()
                                        .HasForeignKey("DebtorDetailsReceivableId");
                                });

                            b1.Navigation("Address");
                        });

                    b.OwnsOne("ReceivablesShowcase.Domain.Receivables.Money", "OpeningAmount", b1 =>
                        {
                            b1.Property<Guid>("ReceivableId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT")
                                .HasColumnName("OpeningAmount");

                            b1.Property<string>("CurrencyCode")
                                .HasMaxLength(8)
                                .HasColumnType("TEXT")
                                .HasColumnName("OpeningAmountCurrencyCode");

                            b1.HasKey("ReceivableId");

                            b1.ToTable("Receivables");

                            b1.WithOwner()
                                .HasForeignKey("ReceivableId");
                        });

                    b.OwnsOne("ReceivablesShowcase.Domain.Receivables.Money", "PaidAmount", b1 =>
                        {
                            b1.Property<Guid>("ReceivableId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT")
                                .HasColumnName("PaidAmount");

                            b1.Property<string>("CurrencyCode")
                                .HasMaxLength(8)
                                .HasColumnType("TEXT")
                                .HasColumnName("PaidAmountCurrencyCode");

                            b1.HasKey("ReceivableId");

                            b1.ToTable("Receivables");

                            b1.WithOwner()
                                .HasForeignKey("ReceivableId");
                        });

                    b.Navigation("Debtor")
                        .IsRequired();

                    b.Navigation("OpeningAmount")
                        .IsRequired();

                    b.Navigation("PaidAmount")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
